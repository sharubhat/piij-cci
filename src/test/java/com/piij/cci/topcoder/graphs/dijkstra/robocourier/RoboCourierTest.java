package com.piij.cci.topcoder.graphs.dijkstra.robocourier;

import junitparams.JUnitParamsRunner;
import junitparams.Parameters;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

/**
 * Created by sharath on 1/7/17.
 */
@RunWith(JUnitParamsRunner.class)
public class RoboCourierTest {
    protected RoboCourier solution;

    private Object[] getInputs() {
        return new Object[][]{{new String[]{"FRRFLLFLLFRRFLF"}, 15},
                {new String[]{"RFLLF"}, 17},
                {new String[]{"FLFRRFRFRRFLLFRRF"}, 0},
                {new String[]{"FFFFFFFFFRRFFFFFFRRFFFFF", "FLLFFFFFFLLFFFFFFRRFFFF"}, 44},
                {new String[]{"FRRFLLFLLFRF"}, 11},
                {new String[]{"RRFFFLFLFLFLRFLFLFLFLFRLFLFLRF"}, 36},
                {new String[]{"RFLRFRFFRFRFRFFRRFRLRFRFLRRFRR", "FFRLLFLFLFFFLLFFFFLRFRLLFFFFRF"}, 61},
                {new String[]{"RFRFFFRLRLLFFFRLFLFFRRLLLFFLFRFRRFLLFFRLRRFFF", "RRLFRLRLLLRRLLLLRRFRLLLRLLFFFFFLRLFLFLLFRFFLR", "FLLRLFFFFR"}, 70},
                {new String[]{"FFFRRRRRRRRRFFFLLLLLLLFF"}, 14},
                {new String[]{"LLFFFFRRFLFFLFLFLLFRRFFLLFFFFLLFLFFFRRFF"}, 38},
                {new String[]{"RFLLFLFLFRFRRFFFRFFRFFRRFLFFRLRRFFLFFLFLLFRFLFLRFF", "RFFLFLFFRFFLLFLLFRFRFLRLFLRRFLRFLFFLFFFLFLFFRLFRLF", "LLFLFLRLRRFLFLFRLFRF"}, 24},
                {new String[]{"LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"}, 0},
                {new String[]{"RRFLRRRFRRLRRRFRLRRLRFLRRFFLLLLRLLRRLLLRRLRLRLLFFF", "RLLLRFRLFLRFFFFLRLRFLLFLLRRLFLFRFRFLFRLRFFFRFLLLRF", "FLFLFFFFLLRFLLLFFFFLLRLLFFFFRLRRRRLRFRRLRFRLRRFFLF", "FFLFLFFFRFFLRLLFLRFLFRLLRRLFLLLLFRLRRRFLFLRRRFRLRL", "FRFRFLLLFRFLFFFRFFLRFLLFRRLLLFRFLLFFLFFFFFRFLLFLFR", "FLLFRLRLRFFRFRRLRRFRFRRFRLLRRRLLLRFFLFRRFFRLRRFRLF", "FFFLRRFFRLRRLFRLRLFFLFLFFLFFLLRLLLLFFFFFFFFRRFLLRL", "RRFLFFLLRRLLRRRRRLLFRLLLRRRFRFRFRLRLLFRFFLLLLLRRRL", "LFLLRLRLLRRRRLRLLFRRFFLFRLFRLLRLLFLFFLFFFLFRRRLRLR", "FRLLRRRLLLRLRLFLLFLLLFFLFFRRFRFFFFLLLLLFLFRRLRRLFR"}, 102},
                {new String[]{"FLFRRLLFLLRLLRLLLRFRRLLLRRLLRLLLFLLRLRRLLRFLLFLLLR", "RRFFLLFLRFFRLLLRRLLRFLFLFRRFLLRRLLFLLFRRFRLRFLRLFR", "RFFLFFRRFFLLFFFRLFFRRFRLLFLLRRFFRLFRFRLLFLLRFLLRLF", "RRRLRLLFRFRRLLLLLFRFRLLRFLFLFFRFRRLLRFFLLRLRLRFLRL", "RFFRFLLLRLRRLFFRFLLFFRLRRLRLRLLLLFLLLLLFLRRFLRFRLL", "FFLFRLRRRLLFLFLLRLLRLLRLRFLLRLFRFRFRFLFLLRRLLLLFFF", "LRFLRFLLFLLRLFFLFFLLLRLLRLLRFRLRLRLLFFRRLFFLLFLRLL", "FLLRLRRLLFFLLFLLLRLRFRFFRRLRFRLLRRLRFRFRRLLFLRLLLL", "LFFLRLRLLRRFFRLLRFFLLFLRRRFLFLFLLRLFFLLRFLFLLLRLFF", "LLFRLLFLFFRLFFLLFLRRLLFLRFFFRLLFFRLFRFRLLFFFLLRLRL"}, 145},
                {new String[]{"RLFRFFRFRFFRFFLFFLRLRLFLFLRFFRFLRLRFLFFLFFFRLFRLFL", "RLRFRFRFLFLFLFFLRLFFLRLRFFFLFLFFLFRLFFFFRLFFLRLFFL", "FLRFRLRLFLRLFRLFLFFFRLRLRRFLFLFFFLRFLRFFLRFLRLLFLR", "LFFRLFRFRFRLLFLRFRLLFRLFFFRLRLLFRFLFLFRLLFFLFLRLFF", "FFLFLRRFFFLRFLRFLFLFFLRFLFFLFFFLRLFFFLRFLFRFFRFFFR", "FLRLRLRRFRLRFLFLFRRFLLFRFLRFFLRLFLFLRLFFLRLRFFLFLF", "LFLFLRFFFFRFRLFRFFFFFLFLFFLRLFFFRFFFFFLFFFLFLFRFRL", "LRLFLRLRRLFRLRRLRLRLRFLFLRLRLLRFLFRFRRLFFFLFLFFLLR", "LRLFFRFLFFFLLFRFLFRLRFFLFLFRRFFFFFLRRFFRLRLFFRLRLF", "LFRLRRLRLRRLRLRFLLFLRLLFLFLFLRLRFFRLRFLRFFRFLLFRFF"}, 143},
                {new String[]{"FLRLRFLRLRFLFLRFFFFLRFLFFFLRFFRLFRLRFLRLRRFRLRFRRF", "LRFFFRRFFLFLFLFRLLFFFLFFLFLLFLFFLFFFRFFFFLRLRLFLRF", "LFRLFLFFLFLRRFLRFRLFRLLFLRFLFLRFFFLRFLFRLFLRRFFLRL", "LRFFLLFLRLRLLFFFRFFRLFRFRLRLFFFRLRFLFLFLFRLRRFLRRF", "FLFFLFLFRLRLRLFRFFLLFLFLRFFRRFLRFFLRLRLRFRLFLFLFLR", "LFLRRFLLFLFLFLFFLLFFFLFFRFRLRFLFRFRLFLRFFLFRRFFFLL", "RFFFLRLFFRLFRFLRLFRFLFRFLFRRLFFLFRLRLLFRLFLFFFLFFR", "LRLLFFRFRFRLRLRFFRLFFLLFFFLRFFRFLFRFLRLRLRLFLFLFLF", "LLFLFRFLLFFLFFLRLFRRFLRLRLRFFRLFFLRFLFFRFLFLFLFFLR", "FFFLLFRFRLLFFFLRLFLRLFRLRRFLRFLRFFRFRFLFLLRFLFLRFL"}, 169},
                {new String[]{"RFRRFLRRFFFLFRLRFLLFFLFFFLRLRLFLFFRLFFRLFFLLFFLRFL", "FFLFFFFLFFFFLLFLRLLRFFLRFFFFLFFLFLFFLFRLRFLRLFLRFL", "LRFRFFFLRFFLRFFRLRLLFLRLFFFFRFFFLFLFLRRRRFLFFFLFLR", "LRFFFLFRLRFLLFLRLRLFFFRFLRLLFFFRLFLRFFRFFLRFLRFLRR", "FLFLFLRLRFFLLFFFRFFFLRLRFFLRLLFRFLFFLFLFFLFLRLRLFF", "LLFFFLRFFFLFLRFLRFFFRLFRFLLFLFLRRFLRFFLFFLFFLFFLLF", "FLFLFLRLFLRFFLRLFLRLRLFRFLRLRLFLFLRFFLFRLFLFLLFLFF", "RLRFLRRFRFRLRFRLRFLFFLLFLFFFLLFLRLFRLRLRLFLRFLFLRL", "LFRFFLRRFRFLFFFLFFFLFLFFLFRLLFFFLRFRLRLFLRLRFLRFFR", "LLFRLRFRLRLFLLFRFRFLLLFFLRFLRLRLFFRLLFLFLRRFLFRRFL"}, 158},
                {new String[]{"FFFF", "LFFFFFFFF", "FFFFFFFFFFFFFR", "LRFFFFFFF"}, 82},
                {new String[]{"FLFFLFLRLRLRLFFLRLRLFLFLRLFFFLRLFRLFRFFLRRFLFLRLLF", "FFLFRLFLFFLFLRFRRFLFFFLFLFRRFRLFFFRLRLRFRRFLRFLRFL", "FFFFRFLFRFFFFLLFLFLFLFFLRLFLFLLFFRFLLFLFFRFRFLRFRL", "RRFLFLRLFFLRFRLRLFLRLRLLFFFLRFFLFLFLFFFRFRFFFLLFRL", "FFLRLRLFRLLFRFLFLRFRLFFLLFRFLRLFFRLFRLLFLFLFFFLLFR", "FLRFFLRLLFFRRFRLFLFLFLFFRFLFLRFRFFFLFLRLRFLFRFLRLR", "LFLFFLLFRLFLRRLRLRLRFLRRFLRLFFRFFLRFFLFLFFLRFLRLRL", "FLLFRFRLFRFFFFFLRRRFLFLRFFLRFLLFFLRFLRLRLRLRLFFLRR"}, 109},
                {new String[]{"LLFLFRLRRLRFFLRRRRFFFLRFFRRRLLFLFLLRLRFFLFRRFFFLFL", "RLFFRRLRLRRFFFLLLRFRLLRFFLFRLFRRFRRRFRLRLRLFFLLFLF", "FRFLRFRRLLLRFFRRRLRFLFRRFLFFRLFLFLFRLLLLFRLLRFLLLF", "FFLFRFRRFLLFFLLLFFRLLFLRRFRLFFFRRFFFLLRFFLRFRRRLLR", "FFFRRLLFLLRLFRRLRLLFFFLFLRFFRLRLLFLRLFFLLFFLLFFFRR", "LRFRRFLRRLRRLRFFFLLLLRRLRFFLFRFFRLLRFLFRRFLFLFFLFR", "RFRRLRRFLFFFLLRFLFRRFRFLRLRLLLLFLFFFLFRLLRFRLFRLFR", "LLFLFRLFFFFFFFRRLRLRLLRFLRLRRRRRRRRLFLFLFLRFLFRLFF", "RLFRRLLRRRRFFFRRRLLLLRRLFFLLLLLRFFFFRFRRLRRRFFFLLF", "FFFFLRRLRFLLRRLRLRFRRRRLFLLRFLRRFFFRFRLFFRLLFFRRLL"}, 169},
                {new String[]{"FFFFFFFFFFFFFFFFFFFF"}, 44},
                {new String[]{"FLFLFFRFFLRLRFLRFLRLLLFLRLFLFRFRRFFFLFLRLFLFLLFLFL", "RFFLFFLRFRLFRFFFRFRFRFRFLFLRFLFRLFLFLLFRFLFLFLFLRL", "FRLFFFFRFFLFFFFRLLRLFFLLFRLFFLRFLRLRFRFRLLFLRLFRFF", "LRLRLRFLRRFLFFLFFLFRFLFLFLRFFFLLFRFRLFFLFFFLFRLLFL", "LRFFLRFRRFRLRFFFLLFRRFFFLFFFLLFLFFFRRFLFRFLFFFLRLF", "FLFRFLFRFFFLLFFLRLFLFLLFLLFFLRRLRLFLFFFLRRFLLFLRFF", "RFLRFLFRLFLLFRFLFFLFLFLRLLFRLFLRLFLFLFLFFRLRLFLFRL", "LRLLRFLFLFLRLLFRFLRLFFFFLFLRLLFFFFLFLRLFRFLFLRFLRF"}, 54},
                {new String[]{"FFFFRLLFLFRFFFLRLFFFRFFLRLLFFFFFL", "FFFFFFRLFFRLFFRFRFFFFLFFFFLRFFFLR", "FRLLLFRFRFFFFFFRLFFFFFFLRRFFFRLRL", "F"}, 218},
                {new String[]{"FFLRLFRRFRFFRLFRLRLRLRLRLFFRLRLRLFRLFRFFLLFFFFR", "RLFFLRLFRFFFLLFFFFFRFRLFLRLRFFFLFFFRFFFFFLFFFFF", "FFFRLRFFRFFFRFLRFFFLRFFFLRFFRLFFFFFFFRLFFFLRLRL", "RLFRLFFFRLRLRFLRLFFFFFFFRLFFFFRFFFRRFLFFFFFLLFF", "FFRLFFFFRFFLFFLFRLFFFFFFFFFFRFFFFFLFRLRRFFFLRLF", "LFRLFFFFFFFFFRFFFLRFFFFFFFRLFLFLRRFLFFFRFFFLLFF", "RFFLFFRFFRFFFFFFFRFFFRFLFFLRFFRLFFFFFFFLFFLFFLR", "FFFFRFFFFFRLFFFFLFFLRFFFLFFFFFFFFLFLFFRRLRLRLRF", "FFRFLFFFLRFFLRLLFRLRLRFFFRFFFFRFRRFLLFFFFRLRLRF", "FFFFFRRFFFRLLFFFFFLRFRFFFFR"}, 988},
                {new String[]{"FLRRFFFFFRLFLRFFFLRFFRR", "RFLRLRFFFRLFFRFLRLRFFFR", "RLRRFFFLRFRLFLFLFLLFFFF", "FFFFLLFFFLLFFRLFRLRRRFF", "RFRFF"}, 7},
                {new String[]{"RLRFLFRLLRFLFLRFFLFLFLFRLFLRFFRLLFLFLFLF", "LFLFRLLFLRLLFRFFLLFLFFRFRFRLRFLRFLFLFFLL"}, 44},
                {new String[]{"F"}, 4},
                {new String[]{"R"}, 0},
                {new String[]{"FFLFLLRLFLFLLFRLFLLFFRFF"}, 33},
                {new String[]{"FFLFLFRF"}, 29},
                {new String[]{"FFFFFFF", "F", "F", "RRFFF", "F", "FFR", "RFFFFF", "FLLFFFFFFLLFFFFFFRRFFF", "F"}, 44},
                {new String[]{}, 1004},
                {new String[]{"RRRFRFRFRFFRFRF"}, 52}};
    }

    @Before
    public void setUp() {
        solution = new RoboCourier();
    }

    @Test(timeout = 2000)
    @Parameters(method = "getInputs")
    public void testTimeToDeliverWithShortTimeout(String[] path, int expected) {
        int actual = solution.timeToDeliver(path);
        Assert.assertEquals(expected, actual);
    }
}